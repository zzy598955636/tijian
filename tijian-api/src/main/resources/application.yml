

spring:
  cache:
    redis:
      time-to-live: 2592000000
    type: redis
  rabbitmq:
    host: 118.25.19.42
    port: 5672
    username: admin
    password: abc123456
  data:
    mongodb:
      host: 118.25.19.42
      port: 27017
      database: his
      # admin是MongoDB用于验证用户身份的逻辑库，不能改变
      authentication-database: admin
      username: admin
      password: abc123456
  redis:
    database: 0
    host: 118.25.19.42
    port: 6379
    password: abc123456
    jedis:
      pool:
        max-active: 1000
        max-wait: -1ms
        max-idle: 16
        min-idle: 8



  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://118.25.19.42:8066/his?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true
      username: root
      password: abc123456
      #初始连接数量
      initial-size: 8
      max-active: 16
      # 最小冗余
      min-idle: 8
      # 最大等待时长（所有的链接都分配出去了，现在来了一个新的链接，最大的等待时间)
      max-wait: 60000
      # 让数据库链接是不是检测空闲链接是否有效
      test-while-idle: true
      # 每次用jdbc链接的时候，检测是否有效（长时间不连接的时候，jdbc会自动切断）
      test-on-borrow: true
      # 归还连接池的时候检测是否有效，这里使用的时候检测就行了，返还的时候不必检测
      test-on-return: false
      validation-query: SELECT 1


  servlet:
    multipart:
      # 允许上传文件
      enabled: true
      # 每个文件最大不能超过20m
      max-file-size: 20MB
      # HTTP请求不能超过20M
      max-request-size: 20MB

mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.example.tijianapi.api.db.pojo
  configuration:
    #输出执行的SQL语句
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true


logging:
  level:
    #SpringBoot日志级别
    root: info
    #MyBatis的日志级别
    com.example.his.api.db.dao: warn
  pattern:
    console: "%d{yyyy/MM/dd HH:mm:ss}  %-5level  %msg%n"

sa-token:
  #HTTP请求头中哪个属性用来上传令牌
  token-name: token
  #过期时间（秒），设置为30天
  timeout: 2592000
  #临时有效期，设置为3天
  activity-timeout: 259200
  #不允许相同账号同时在线，新登陆的账号会挤掉原来登陆的账号
  allow-concurrent-login: false
  #在多人登陆相同账号的时候，是否使用相同的Token
  is-share: false
  token-style: uuid
  #是否读取Cookie中的令牌
  isReadCookie: false
  #同端互斥
  isConcurrent: false
  #SaToken缓存令牌用其他的逻辑库，避免业务数据和令牌数据共用相同的Redis逻辑库
  alone-redis:
    database: 1
    host: 118.25.19.42
    port: 6379
    password: abc123456
    timeout: 10s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 10s
        # 连接池中的最大空闲连接
        max-idle: 16
        # 连接池中的最小空闲连接
        min-idle: 8
server:
  jetty:
    threads:
      #acceptors线程池用于接受HTTP请求
      acceptors: 4
      #selectors线程池用于处理HTTP数据包
      selectors: 8
      #worker线程池负责调用Web方法
      min: 8
      max: 200
#  ssl:
#    enabled: true
#    key-store-type: PKCS12
#    key-store: classpath:keystore.p12
#    key-store-password: 598955636

  servlet:
    context-path: /his-api
  port: 7700
